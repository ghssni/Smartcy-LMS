// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: learning_progress.proto

package pb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a learning progress entry for a lesson.
type LearningProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         // Unique identifier for the learning progress record
	EnrollmentId uint32               `protobuf:"varint,2,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // The ID of the enrollment (user-course relation)
	LessonId     uint32               `protobuf:"varint,3,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`             // The ID of the lesson being tracked
	Status       bool                 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                 // Indicates whether the lesson is completed (true) or incomplete (false)
	LastAccessed *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_accessed,json=lastAccessed,proto3" json:"last_accessed,omitempty"`  // Timestamp of when the lesson was last accessed
	CompletedAt  *timestamp.Timestamp `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`     // Timestamp of when the lesson was marked as completed
	DeletedAt    *timestamp.Timestamp `protobuf:"bytes,7,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`           // Timestamp for soft delete (if applicable)
}

func (x *LearningProgress) Reset() {
	*x = LearningProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LearningProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearningProgress) ProtoMessage() {}

func (x *LearningProgress) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearningProgress.ProtoReflect.Descriptor instead.
func (*LearningProgress) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{0}
}

func (x *LearningProgress) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LearningProgress) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

func (x *LearningProgress) GetLessonId() uint32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *LearningProgress) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LearningProgress) GetLastAccessed() *timestamp.Timestamp {
	if x != nil {
		return x.LastAccessed
	}
	return nil
}

func (x *LearningProgress) GetCompletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *LearningProgress) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// Request message to mark a lesson as completed.
type MarkLessonAsCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // The ID of the enrollment (user-course relation)
	LessonId     uint32 `protobuf:"varint,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`             // The ID of the lesson to mark as completed
}

func (x *MarkLessonAsCompletedRequest) Reset() {
	*x = MarkLessonAsCompletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkLessonAsCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkLessonAsCompletedRequest) ProtoMessage() {}

func (x *MarkLessonAsCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkLessonAsCompletedRequest.ProtoReflect.Descriptor instead.
func (*MarkLessonAsCompletedRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{1}
}

func (x *MarkLessonAsCompletedRequest) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

func (x *MarkLessonAsCompletedRequest) GetLessonId() uint32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

// Response message for marking a lesson as completed.
type MarkLessonAsCompletedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Success or failure message (e.g., "Lesson completed", "Already completed")
}

func (x *MarkLessonAsCompletedResponse) Reset() {
	*x = MarkLessonAsCompletedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkLessonAsCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkLessonAsCompletedResponse) ProtoMessage() {}

func (x *MarkLessonAsCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkLessonAsCompletedResponse.ProtoReflect.Descriptor instead.
func (*MarkLessonAsCompletedResponse) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{2}
}

func (x *MarkLessonAsCompletedResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request message to get the total number of completed lessons for an enrollment.
type GetTotalCompletedLessonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // The ID of the enrollment for which to count completed lessons
}

func (x *GetTotalCompletedLessonsRequest) Reset() {
	*x = GetTotalCompletedLessonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalCompletedLessonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCompletedLessonsRequest) ProtoMessage() {}

func (x *GetTotalCompletedLessonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCompletedLessonsRequest.ProtoReflect.Descriptor instead.
func (*GetTotalCompletedLessonsRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{3}
}

func (x *GetTotalCompletedLessonsRequest) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

// Response message containing the total number of completed lessons for an enrollment.
type CompletedProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId   uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"`       // The ID of the enrollment
	TotalCompleted uint32 `protobuf:"varint,2,opt,name=total_completed,json=totalCompleted,proto3" json:"total_completed,omitempty"` // The total number of completed lessons
}

func (x *CompletedProgress) Reset() {
	*x = CompletedProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletedProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedProgress) ProtoMessage() {}

func (x *CompletedProgress) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedProgress.ProtoReflect.Descriptor instead.
func (*CompletedProgress) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{4}
}

func (x *CompletedProgress) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

func (x *CompletedProgress) GetTotalCompleted() uint32 {
	if x != nil {
		return x.TotalCompleted
	}
	return 0
}

// Request message for retrieving total completed learning progress across multiple enrollments.
type GetTotalCompletedProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTotalCompletedProgressRequest) Reset() {
	*x = GetTotalCompletedProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalCompletedProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCompletedProgressRequest) ProtoMessage() {}

func (x *GetTotalCompletedProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCompletedProgressRequest.ProtoReflect.Descriptor instead.
func (*GetTotalCompletedProgressRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{5}
}

// Response message containing the total completed progress across multiple enrollments.
type GetTotalCompletedProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress []*CompletedProgress `protobuf:"bytes,1,rep,name=progress,proto3" json:"progress,omitempty"` // A list of completed progress entries per enrollment
}

func (x *GetTotalCompletedProgressResponse) Reset() {
	*x = GetTotalCompletedProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalCompletedProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCompletedProgressResponse) ProtoMessage() {}

func (x *GetTotalCompletedProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCompletedProgressResponse.ProtoReflect.Descriptor instead.
func (*GetTotalCompletedProgressResponse) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{6}
}

func (x *GetTotalCompletedProgressResponse) GetProgress() []*CompletedProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

// Request message to reset the progress of a specific lesson.
type ResetLessonMarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // The ID of the enrollment (user-course relation)
	LessonId     uint32 `protobuf:"varint,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`             // The ID of the lesson to reset
}

func (x *ResetLessonMarkRequest) Reset() {
	*x = ResetLessonMarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLessonMarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLessonMarkRequest) ProtoMessage() {}

func (x *ResetLessonMarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLessonMarkRequest.ProtoReflect.Descriptor instead.
func (*ResetLessonMarkRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{7}
}

func (x *ResetLessonMarkRequest) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

func (x *ResetLessonMarkRequest) GetLessonId() uint32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

// Request message to reset all lesson marks for a specific enrollment ID.
type ResetAllLessonMarksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // Enrollment ID for which to reset all lesson marks
}

func (x *ResetAllLessonMarksRequest) Reset() {
	*x = ResetAllLessonMarksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAllLessonMarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAllLessonMarksRequest) ProtoMessage() {}

func (x *ResetAllLessonMarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAllLessonMarksRequest.ProtoReflect.Descriptor instead.
func (*ResetAllLessonMarksRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{8}
}

func (x *ResetAllLessonMarksRequest) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

// Request message to update the last accessed timestamp for a completed lesson.
type UpdateLastAccessedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // The ID of the enrollment (user-course relation)
	LessonId     uint32 `protobuf:"varint,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`             // The ID of the lesson being accessed
}

func (x *UpdateLastAccessedRequest) Reset() {
	*x = UpdateLastAccessedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLastAccessedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLastAccessedRequest) ProtoMessage() {}

func (x *UpdateLastAccessedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLastAccessedRequest.ProtoReflect.Descriptor instead.
func (*UpdateLastAccessedRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateLastAccessedRequest) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

func (x *UpdateLastAccessedRequest) GetLessonId() uint32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

// Request message for listing all learning progress records for an enrollment.
type ListLearningProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollmentId uint32 `protobuf:"varint,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"` // The ID of the enrollment (user-course relation)
}

func (x *ListLearningProgressRequest) Reset() {
	*x = ListLearningProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLearningProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLearningProgressRequest) ProtoMessage() {}

func (x *ListLearningProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLearningProgressRequest.ProtoReflect.Descriptor instead.
func (*ListLearningProgressRequest) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{10}
}

func (x *ListLearningProgressRequest) GetEnrollmentId() uint32 {
	if x != nil {
		return x.EnrollmentId
	}
	return 0
}

// Response message for listing all learning progress records for an enrollment.
type ListLearningProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LearningProgress []*LearningProgress `protobuf:"bytes,1,rep,name=learning_progress,json=learningProgress,proto3" json:"learning_progress,omitempty"` // A list of learning progress records for the enrollment
}

func (x *ListLearningProgressResponse) Reset() {
	*x = ListLearningProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learning_progress_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLearningProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLearningProgressResponse) ProtoMessage() {}

func (x *ListLearningProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_learning_progress_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLearningProgressResponse.ProtoReflect.Descriptor instead.
func (*ListLearningProgressResponse) Descriptor() ([]byte, []int) {
	return file_learning_progress_proto_rawDescGZIP(), []int{11}
}

func (x *ListLearningProgressResponse) GetLearningProgress() []*LearningProgress {
	if x != nil {
		return x.LearningProgress
	}
	return nil
}

var File_learning_progress_proto protoreflect.FileDescriptor

var file_learning_progress_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x02, 0x0a, 0x10, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x1c, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1d, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x46, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x22, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x65, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5a, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x32, 0x9d, 0x06, 0x0a, 0x17,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x6b, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x2f, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x29, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x13, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x12, 0x2d, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x74, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x86, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x2e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x13, 0x5a, 0x11, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_learning_progress_proto_rawDescOnce sync.Once
	file_learning_progress_proto_rawDescData = file_learning_progress_proto_rawDesc
)

func file_learning_progress_proto_rawDescGZIP() []byte {
	file_learning_progress_proto_rawDescOnce.Do(func() {
		file_learning_progress_proto_rawDescData = protoimpl.X.CompressGZIP(file_learning_progress_proto_rawDescData)
	})
	return file_learning_progress_proto_rawDescData
}

var file_learning_progress_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_learning_progress_proto_goTypes = []any{
	(*LearningProgress)(nil),                  // 0: learning_progress.LearningProgress
	(*MarkLessonAsCompletedRequest)(nil),      // 1: learning_progress.MarkLessonAsCompletedRequest
	(*MarkLessonAsCompletedResponse)(nil),     // 2: learning_progress.MarkLessonAsCompletedResponse
	(*GetTotalCompletedLessonsRequest)(nil),   // 3: learning_progress.GetTotalCompletedLessonsRequest
	(*CompletedProgress)(nil),                 // 4: learning_progress.CompletedProgress
	(*GetTotalCompletedProgressRequest)(nil),  // 5: learning_progress.GetTotalCompletedProgressRequest
	(*GetTotalCompletedProgressResponse)(nil), // 6: learning_progress.GetTotalCompletedProgressResponse
	(*ResetLessonMarkRequest)(nil),            // 7: learning_progress.ResetLessonMarkRequest
	(*ResetAllLessonMarksRequest)(nil),        // 8: learning_progress.ResetAllLessonMarksRequest
	(*UpdateLastAccessedRequest)(nil),         // 9: learning_progress.UpdateLastAccessedRequest
	(*ListLearningProgressRequest)(nil),       // 10: learning_progress.ListLearningProgressRequest
	(*ListLearningProgressResponse)(nil),      // 11: learning_progress.ListLearningProgressResponse
	(*timestamp.Timestamp)(nil),               // 12: google.protobuf.Timestamp
	(*empty.Empty)(nil),                       // 13: google.protobuf.Empty
}
var file_learning_progress_proto_depIdxs = []int32{
	12, // 0: learning_progress.LearningProgress.last_accessed:type_name -> google.protobuf.Timestamp
	12, // 1: learning_progress.LearningProgress.completed_at:type_name -> google.protobuf.Timestamp
	12, // 2: learning_progress.LearningProgress.deleted_at:type_name -> google.protobuf.Timestamp
	4,  // 3: learning_progress.GetTotalCompletedProgressResponse.progress:type_name -> learning_progress.CompletedProgress
	0,  // 4: learning_progress.ListLearningProgressResponse.learning_progress:type_name -> learning_progress.LearningProgress
	1,  // 5: learning_progress.LearningProgressService.MarkLessonAsCompleted:input_type -> learning_progress.MarkLessonAsCompletedRequest
	7,  // 6: learning_progress.LearningProgressService.ResetLessonMark:input_type -> learning_progress.ResetLessonMarkRequest
	8,  // 7: learning_progress.LearningProgressService.ResetAllLessonMarks:input_type -> learning_progress.ResetAllLessonMarksRequest
	3,  // 8: learning_progress.LearningProgressService.GetTotalCompletedLessons:input_type -> learning_progress.GetTotalCompletedLessonsRequest
	5,  // 9: learning_progress.LearningProgressService.GetTotalCompletedProgress:input_type -> learning_progress.GetTotalCompletedProgressRequest
	10, // 10: learning_progress.LearningProgressService.ListLearningProgress:input_type -> learning_progress.ListLearningProgressRequest
	9,  // 11: learning_progress.LearningProgressService.UpdateLastAccessed:input_type -> learning_progress.UpdateLastAccessedRequest
	2,  // 12: learning_progress.LearningProgressService.MarkLessonAsCompleted:output_type -> learning_progress.MarkLessonAsCompletedResponse
	13, // 13: learning_progress.LearningProgressService.ResetLessonMark:output_type -> google.protobuf.Empty
	13, // 14: learning_progress.LearningProgressService.ResetAllLessonMarks:output_type -> google.protobuf.Empty
	4,  // 15: learning_progress.LearningProgressService.GetTotalCompletedLessons:output_type -> learning_progress.CompletedProgress
	6,  // 16: learning_progress.LearningProgressService.GetTotalCompletedProgress:output_type -> learning_progress.GetTotalCompletedProgressResponse
	11, // 17: learning_progress.LearningProgressService.ListLearningProgress:output_type -> learning_progress.ListLearningProgressResponse
	13, // 18: learning_progress.LearningProgressService.UpdateLastAccessed:output_type -> google.protobuf.Empty
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_learning_progress_proto_init() }
func file_learning_progress_proto_init() {
	if File_learning_progress_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_learning_progress_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LearningProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MarkLessonAsCompletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MarkLessonAsCompletedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetTotalCompletedLessonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CompletedProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetTotalCompletedProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetTotalCompletedProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ResetLessonMarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ResetAllLessonMarksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateLastAccessedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListLearningProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learning_progress_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListLearningProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_learning_progress_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_learning_progress_proto_goTypes,
		DependencyIndexes: file_learning_progress_proto_depIdxs,
		MessageInfos:      file_learning_progress_proto_msgTypes,
	}.Build()
	File_learning_progress_proto = out.File
	file_learning_progress_proto_rawDesc = nil
	file_learning_progress_proto_goTypes = nil
	file_learning_progress_proto_depIdxs = nil
}
