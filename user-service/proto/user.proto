syntax = "proto3";
package user;
import "google/protobuf/timestamp.proto";
option go_package = "user-service/pb";

message MetaUser {
  uint32 code = 1;
  string message = 2;
  string status = 3;
}

// Message for User
message User {
  string id = 1;
  string name = 2;
  string email = 3;
  string address = 4;
  string role = 5;
  string phone = 6;
  uint32 age = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

// Message for Register Input
message RegisterInput {
  string name = 1;
  string email = 2;
  string password = 3;
  string address = 4;
  string role = 5;
  string phone = 6;
  uint32 age = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

// Message for Login Input
message LoginInput {
  string email = 1;
  string password = 2;
}

// Message for User Profile
message UserProfile {
  string id = 1;
  string name = 2;
  string email = 3;
  string address = 4;
  string phone = 5;
  uint32 age = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// Message for Update User Profile
message UpdateUserProfileRequest {
  string user_id = 1;
  string name = 2;
  string email = 3;
  string address = 4;
  string phone = 5;
  uint32 age = 6;
}

// Get Profile Request & Response
message GetUserProfileRequest {
  string user_id = 1;
}

message GetUserProfileResponse {
  MetaUser meta = 1;
  UserProfile user_profile = 2;
}

// Update Profile Response
message UpdateUserProfileResponse {
  MetaUser meta = 1;
  UserProfile user_profile = 2;
}

// Register Request & Response
message RegisterRequest {
  RegisterInput register_input = 1;
}

message RegisterResponse {
  MetaUser meta = 1;
  User user = 2;
}

// Login Request & Response
message LoginRequest {
  LoginInput login_input = 1;
}

message LoginResponse {
  MetaUser meta = 1;
  User user = 2;
}

// Get User By Email Request & Response
message GetUserByEmailRequest {
  string email = 1;
}

message GetUserByEmailResponse {
  MetaUser meta = 1;
  User user = 2;
}

// Forgot Password Request & Response
message ForgotPasswordRequest {
  string email = 1;
}

message ForgotPasswordResponse {
  MetaUser meta = 1;
}

// New Password Request & Response
message NewPasswordRequest {
  string user_id = 1;
  string password = 2;
  string confirm_password = 3;
}


message NewPasswordResponse {
  MetaUser meta = 1;
}
message GenerateResetTokenRequest {
  string email = 1;
}

message GenerateResetTokenResponse {
  MetaUser meta = 1;
  string reset_token = 2;
  string reset_url = 3;
}

// User Service Definition
service UserService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
  rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse);
  rpc GenerateResetToken(GenerateResetTokenRequest) returns (GenerateResetTokenResponse);
}
